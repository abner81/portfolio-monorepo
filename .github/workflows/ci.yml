name: Main CI - On push to origin/main
on:
  push:
    branches:
      - 'main'

jobs:
  ci:
    name: Testing application and creating build artifact
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Getting pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "dir=$(pnpm store path)" >> $GITHUB_ENV

      - uses: actions/cache@v2
        id: pnpm-cache
        with:
          path: ${{ env.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Instalar dependências, verificando se o cache foi restaurado
      - name: Installing Dependencies...
        run: |
          if [ -d "${{ env.dir }}" ]; then
            echo "Cache encontrado, instalando em modo offline..."
            pnpm install --frozen-lockfile --offline
          else
            echo "Cache não encontrado, baixando pacotes..."
            pnpm install --frozen-lockfile
          fi

      - name: Derive appropriate SHAs for base and head for 'nx affected'
        uses: nrwl/nx-set-shas@v4

      - name: Running Lint...
        run: pnpm exec nx affected:lint --parallel

      - name: Running Tests...
        run: pnpm exec nx affected:test --parallel

      - name: Building Application...
        run: pnpm exec nx affected:build

      - name: Get affected apps
        id: get-affected-apps
        run: |
          echo "affected_apps=$(./node_modules/.bin/pnpm exec nx show projects --affected)" >> $GITHUB_ENV
