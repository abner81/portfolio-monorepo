import { Test, TestingModule } from '@nestjs/testing';
import { <%= convertToCamelCase(name) %>Service } from './<%= convertToKebabCase(name) %>.service';
import { I<%= convertToCamelCase(repositoryName) %>Repository } from 'rent-car/api/infra';
import { <%= convertToConstant(repositoryName) %>_REPOSITORY } from 'rent-car/api/app/config/constants';

describe('<%= convertToCamelCase(name) %>Service', () => {
  let service: <%= convertToCamelCase(name) %>Service;
  let repository: I<%= convertToCamelCase(repositoryName) %>Repository;
  const params = {}; 

  beforeEach(async () => {
    const module: TestingModule = await Test.createTestingModule({
      providers: [
        <%= convertToCamelCase(name) %>Service,
        {
          provide: <%= convertToConstant(repositoryName) %>_REPOSITORY,
          useValue: {
            execute: jest.fn(),
          },
        },
      ],
    }).compile();

    service = module.get<<%= convertToCamelCase(name) %>Service>(<%= convertToCamelCase(name) %>Service);
    repository = module.get<I<%= convertToCamelCase(repositoryName) %>Repository>(<%= convertToConstant(repositoryName) %>_REPOSITORY);
  });

  it('should be defined', () => {
    expect(service).toBeDefined();
  });

  it('should call repository execute method', async () => {
    await service.execute(params);
    expect(repository.execute).toHaveBeenCalledWith(params); 
  });
});
